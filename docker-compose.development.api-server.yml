# Carambus API Server Development Docker Compose Configuration
# Für den API-Server im Development-Modus auf dem Mac Mini
# Läuft unter www-data User mit angepassten Ports

version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carambus_api_development
      POSTGRES_USER: www_data
      POSTGRES_PASSWORD: carambus_api_development_password
    volumes:
      - postgres_api_dev_data:/var/lib/postgresql/data
      # Optional: Initial database dump
      # - ./doc/doc-local/docker/databases/development/carambus_api_development.sql.gz:/docker-entrypoint-initdb.d/carambus_api_development.sql.gz
    ports:
      - "5433:5432"  # Port 5433 um Konflikte zu vermeiden
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U www_data -d carambus_api_development"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_api_dev_data:/data
    ports:
      - "6380:6379"  # Port 6380 um Konflikte zu vermeiden
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://www_data:carambus_api_development_password@postgres:5432/carambus_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      DEPLOYMENT_TYPE: API_SERVER
      RAILS_HOST: 0.0.0.0
      RAILS_PORT: 3000
    volumes:
      - .:/app  # Code-Volume für Live-Entwicklung
      - ./config/credentials:/app/config/credentials:ro
      - ./storage:/app/storage
      - ./log:/app/log
      - ./tmp:/app/tmp
    ports:
      - "127.0.0.1:3001:3000"  # Port 3001 um Konflikte zu vermeiden
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bundle", "exec", "puma", "-p", "3000", "-e", "development"]
    user: "33:33"  # www-data user

volumes:
  postgres_api_dev_data:
  redis_api_dev_data: 