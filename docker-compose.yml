version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carambus_production
      POSTGRES_USER: www_data
      POSTGRES_PASSWORD: toS6E7tARQafHCXz
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./doc/doc-local/docker/carambus_production_20250805_224054.sql.gz:/docker-entrypoint-initdb.d/carambus_production.sql.gz:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U www_data -d carambus_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data

  web:
    build: .
    environment:
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      DATABASE_URL: postgresql://www_data:toS6E7tARQafHCXz@postgres:5432/carambus_production
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./storage:/app/storage
      - ./log:/app/log
      - ./tmp:/app/tmp
      - ./doc/doc-local/docker/shared/config/credentials:/app/config/credentials:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3000:3000"

  cron:
    build: .
    user: root
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://www_data:toS6E7tARQafHCXz@postgres:5432/carambus_production
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./storage:/app/storage
      - ./log:/app/log
      - ./tmp:/app/tmp
      - ./doc/doc-local/docker/shared/config/credentials:/app/config/credentials:rw
      - ./crontab:/etc/cron.d/carambus:ro
      - ./cron-startup.sh:/usr/local/bin/cron-startup.sh:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["/usr/local/bin/cron-startup.sh"]

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: carambus_network 