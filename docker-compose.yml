version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: carambus_postgres
    environment:
      POSTGRES_DB: carambus_production
      POSTGRES_USER: carambus
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-carambus_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-production-data/carambus_production_20250805_224054.sql.gz:/docker-entrypoint-initdb.d/carambus_production.sql.gz:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carambus -d carambus_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: carambus_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build: .
    container_name: carambus_web
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: carambus_production
      POSTGRES_USER: carambus
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-carambus_password}
      REDIS_URL: redis://redis:6379/0
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
    volumes:
      - ./storage:/app/storage
      - ./log:/app/log
      - ./tmp:/app/tmp
      - ./docker-production-data/shared/config/credentials:/app/config/credentials:ro
    ports:
      - "3000:3000"
    command: bundle exec rails server -b 0.0.0.0

  nginx:
    image: nginx:alpine
    container_name: carambus_nginx
    depends_on:
      - web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/var/www/html:ro
    ports:
      - "80:80"
      - "443:443"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: carambus_network 