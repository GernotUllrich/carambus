# Carambus API Server Mode Docker Compose Configuration
# Wird nach 'rake mode:api' verwendet

version: '3.8'

services:
  # PostgreSQL Database (API Server)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carambus_api_development
      POSTGRES_USER: www_data
      POSTGRES_PASSWORD: carambus_api_development_password
    volumes:
      - postgres_api_data:/var/lib/postgresql/data
      # Optional: Database dump importieren
      - ../../docker-production-data/carambus_production_20250805_224054.sql.gz:/docker-entrypoint-initdb.d/carambus_production_20250805_224054.sql.gz
    ports:
      - "5433:5432"  # API Server verwendet Port 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U www_data -d carambus_api_development"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (API Server)
  redis:
    image: redis:7-alpine
    volumes:
      - redis_api_data:/data
    ports:
      - "6380:6379"  # API Server verwendet Port 6380
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails Application (API Server)
  web:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.development
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://www_data:carambus_api_development_password@postgres:5432/carambus_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      RAILS_HOST: 0.0.0.0
      RAILS_PORT: 3000
      DEPLOYMENT_TYPE: API_SERVER
      # Asset-Build aktivieren
      RAILS_ASSETS_PRECOMPILE: true
    volumes:
      # Source Code
      - ../..:/app
      # Credentials (read-only)
      - ../../config/credentials:/app/config/credentials:ro
      # Persistente Daten
      - storage_api_data:/app/storage
      - log_api_data:/app/log
      - tmp_api_data:/app/tmp
      # Node modules (fÃ¼r bessere Performance)
      - node_modules_api_data:/app/node_modules
    ports:
      - "3001:3000"  # API Server auf Port 3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Asset-Build und Server starten
    command: >
      bash -c "
        echo 'ğŸ”¨ Building assets...' &&
        yarn build:css &&
        yarn build &&
        echo 'ğŸ“¦ Precompiling Rails assets...' &&
        bundle exec rails assets:precompile &&
        echo 'ğŸš€ Starting Rails API Server...' &&
        bundle exec rails server -b 0.0.0.0 -p 3000
      "

volumes:
  postgres_api_data:
  redis_api_data:
  storage_api_data:
  log_api_data:
  tmp_api_data:
  node_modules_api_data:
