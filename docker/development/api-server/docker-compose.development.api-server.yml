version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carambus_api_development
      POSTGRES_USER: www_data
      POSTGRES_PASSWORD: carambus_api_development_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Lokale Datenbank-Dumps einbinden
      - ../../docker-development-api/database:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U www_data -d carambus_api_development"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ../..
      dockerfile: docker/development/api-server/Dockerfile.development
    env_file:
      - env.development.api-server
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://www_data:carambus_api_development_password@postgres:5432/carambus_api_development
      REDIS_URL: redis://redis:6379/0
      DEPLOYMENT_TYPE: API_SERVER
      RAILS_HOST: 0.0.0.0
      RAILS_PORT: 3000
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "true"
      LOCATION_CODE: development
      DATABASE_NAME: carambus_api_development
      DATABASE_PASSWORD: carambus_api_development_password
      DB_DUMP_FILE: ""
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - ../../:/app
      # Lokale Credentials einbinden
      - ../../docker-development-api/config/credentials:/app/config/credentials:ro
      # Lokale Datenbank-Dumps einbinden
      - ../../docker-development-api/database:/app/database:ro
      - bundle_cache:/usr/local/bundle
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        until rails db:version; do
          sleep 2
        done &&
        echo 'Database ready!' &&
        rails server -b 0.0.0.0 -p 3000
      "

volumes:
  postgres_data:
  redis_data:
  bundle_cache:
  node_modules: 