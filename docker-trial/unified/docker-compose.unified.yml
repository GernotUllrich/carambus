version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: carambus_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-carambus_production}
      POSTGRES_USER: ${DATABASE_USER:-www_data}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-carambus_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Datenbank-Dump wird Ã¼ber Environment-Variable DB_DUMP_FILE geladen
      - ./databases/${DB_DUMP_FILE:-carambus_production.sql.gz}:/docker-entrypoint-initdb.d/${DB_DUMP_FILE:-carambus_production.sql.gz}:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - carambus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-www_data} -d ${DATABASE_NAME:-carambus_production}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: carambus_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - carambus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RAILS_ENV: ${RAILS_ENV:-production}
    container_name: carambus_web
    environment:
      RAILS_ENV: ${RAILS_ENV:-production}
      DATABASE_URL: postgresql://${DATABASE_USER:-www_data}:${DATABASE_PASSWORD:-carambus_password}@postgres:5432/${DATABASE_NAME:-carambus_production}
      REDIS_URL: redis://:${REDIS_PASSWORD:-}@redis:6379/0
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-development_secret_key_base}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY:-}
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
      - node_modules_cache:/app/node_modules
      - storage_data:/app/storage
      - log_data:/app/log
      - tmp_data:/app/tmp
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - carambus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: carambus_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    depends_on:
      - web
    networks:
      - carambus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  bundle_cache:
    driver: local
  node_modules_cache:
    driver: local
  storage_data:
    driver: local
  log_data:
    driver: local
  tmp_data:
    driver: local

networks:
  carambus_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 