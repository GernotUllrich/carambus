# Puma Configuration for carambus_location_1 (development)
# Generated by Carambus Mode System

# Puma can serve each request in a thread from an internal thread pool.
threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
threads threads_count, threads_count

# Specifies the `environment` that Puma will run in.
environment ENV.fetch("RAILS_ENV") { "development" }

# Specifies the number of `workers` to boot in clustered mode.
workers ENV.fetch("WEB_CONCURRENCY") { Rails.env.development? ? 0 : 2 }

# Use the `preload_app!` method when specifying a `workers` number.
preload_app! unless Rails.env.development?


# If you are preloading your application and using Active Record, it's
# recommended that you close any connections to the database before workers
# are forked to prevent connection leakage.
before_fork do
  ActiveRecord::Base.connection_pool.disconnect! if defined?(ActiveRecord)
end if Rails.env.production?

# The code in the `on_worker_boot` will be called if you are using
# clustered mode by specifying a number of `workers`.
on_worker_boot do
  ActiveRecord::Base.establish_connection if defined?(ActiveRecord)
end if Rails.env.production?

# Allow puma to be restarted by `rails restart` command.
plugin :tmp_restart

# Development: Use standard port instead of Unix socket
port ENV.fetch("PORT") { 3000 }
