<div class="container mx-auto my-8 px-4">
  <div class="flex justify-between items-center mb-4">
    <h1 class="h3">Tournament Monitors</h1>
  </div>

  <% if @tournament_monitors.any? %>
    <div class=" rounded shadow table-responsive">
      <table class="table">
        <thead>
        <tr>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :tournament_id,'Tournament', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :data,'Data', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :state,'State', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :innings_goal,'Innings goal', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :balls_goal,'Balls goal', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :timeouts,'# Timeouts', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs"><%= sortable @tournament_monitors, :timeout,'Timeout  (sek)', request.params, class: 'text-gray-700 dark:text-gray-300' %></th>
          <th class="p-3 uppercase text-left text-xs text-gray-700 dark:text-gray-300 w-20"><%= t('actions') %></th>
        </tr>
        </thead>

        <tbody>
        <% @tournament_monitors.each do |tournament_monitor| %>
          <tr class="group border-t border-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700">
            <td class="p-3"><%= custom_link_to tournament_monitor.tournament_id, tournament_path(tournament_monitor.tournament) %></td>
            <td class="p-3"><%= tournament_monitor.data.inspect.truncate(500) %></td>
            <td class="p-3"><%= tournament_monitor.state %></td>
            <td class="p-3"><%= tournament_monitor.innings_goal %></td>
            <td class="p-3"><%= tournament_monitor.balls_goal %></td>
            <td class="p-3"><%= tournament_monitor.timeouts %></td>
            <td class="p-3"><%= tournament_monitor.timeout %></td>

            <td>
              <%= custom_link_to t('view'), tournament_monitor, class: "btn btn-link no-underline" %>
            </td>
          </tr>
        <% end %>
        </tbody>
      </table>
    </div>

    <% if @pagy.pages > 1 %>
      <div class="text-center my-6">
        <%- request.set_header("action_dispatch.request.query_parameters", request.headers["action_dispatch.request.query_parameters"].reject { |k, v| k == "table_only" }) %>
        <%== pagy_nav(@pagy) %>
      </div>
    <% end %>

  <% else %>
    <div class=" rounded shadow flex flex-col items-center justify-between p-8 lg:flex-row">
      <%= image_tag "empty.svg", class: "mb-4 lg:w-1/2" %>
      <div class="flex-1 text-center">
        <p class="h3 mb-4">Create your first Tournament Monitor</p>
        <%= button_to 'New Tournament Monitor', new_tournament_monitor_path, method: :get, disabled: !current_user&.admin?, class: "btn btn-primary" %>
      </div>
    </div>
  <% end %>
</div>
<%- try do %>
<%- if current_user.andand.admin? %>
  <h2><%= I18n.t("tournament_monitors.index.tournamentmonitorversions", :default => "TournamentMonitor::Versions") %></h2>
  <p><%= I18n.t("tournament_monitors.index.this_table_is_displaying_tournamentmonitorversion_which_is_its_own_versions_table_only_last_10", :default => "This table is displaying TournamentMonitor::Version which is its own versions table. Only last 10.") %></p>
  <table class="w-full" width=100% cellpadding=10 border=1>
    <thead>
    <tr>
      <th><%= I18n.t("tournament_monitors.index.id", :default => "ID") %></th>
      <th><%= I18n.t("tournament_monitors.index.event_name", :default => "Event Name") %></th>
      <th><%= I18n.t("tournament_monitors.index.when", :default => "When") %></th>
      <th class="truncate"><%= I18n.t("tournament_monitors.index.object_after_changes", :default => "Object (after Changes)") %></th>
      <!--    <th><%= I18n.t("tournament_monitors.index.object_changes", :default => "Object Changes") %></th>-->
      <th><%= I18n.t("tournament_monitors.index.object_diffs", :default => "Object Diffs") %></th>
    </tr>
    </thead>
    <tbody>
    <% if PaperTrail::Version.all.any? %>
      <% PaperTrail::Version.all.last(50).reverse.each do |version| %>
        <%- next if version.item_type == "DebugInfo" %>
        <tr>
          <td><%= version.id %></td>
          <td><%= version.event %></td>
          <td><%= version.created_at %></td>
          <td class="truncate w-1/2">
            <pre><%= version.whodunnit.to_s.gsub("#{Rails.root}", "").gsub(", ", "\n") %></pre>
            <pre><%= version.item_type %>
              <br/><%= version.object.split("\n").map { |l| l.truncate(100) }.join("\n") if version.object.present? %></pre>
          </td>
          <!--        <td><pre><%#= JSON.pretty_generate(version.changeset) %></pre></td>-->
          <% h = version.changeset; h.keys.each { |k| v = h[k]; h[k] = v[1].is_a?(Hash) ? [hash_diff(v[0], v[1]), hash_diff(v[1], v[0])] : v } %>
          <td>
            <pre><%= JSON.pretty_generate(h) %></pre>
          </td>
        </tr>
      <% end %>
    <% end %>
    </tbody>
  </table>
<%- end %>
<%- rescue StandardError => e %>
  <%- e %>
<%- end %>
