/* TailwindCSS mit sanfterem Reset */
@import "tailwindcss/base";

/* Sanftere Basis-Styles */
@import "tailwindcss/components";

/*
 * default styles
 * Remove these if you'd like to use TailwindUI which expects a clean slate
*/
@import "components/base.css";
@import "components/alert.css";
@import "components/animation.css";
@import "components/carambus.css";
@import "components/avatars.css";
@import "components/buttons.css";
@import "components/code.css";
@import "components/direct_uploads.css";
@import "components/docs.css";
@import "components/forms.css";
@import "components/icons.css";
@import "components/iframe.css";
@import "components/modal.css";
@import "components/nav.css";
@import "components/notifications.css";
@import "components/pagination.css";
@import "components/virt_keyboard.css";
@import "components/strada.css";
@import "components/tabs.css";
@import "components/trix.css";
@import "components/typography.css";
@import "components/util.css";
@import "components/braintree.css";

@import "tailwindcss/utilities";

/* CRITICAL: Button overrides MUST come after Tailwind utilities to override text-primary-* classes */
/* Override a:is(.dark *) rule that sets light blue text (rgb(96 165 250)) on anchors */
/* Must use same specificity but with !important and come AFTER the utility rule */
a:is(.dark *).btn.btn-primary,
a:is(.dark *).btn.btn-primary:hover,
a:is(.dark *).btn.btn-primary:focus,
a:is(.dark *).btn.btn-primary:active,
a:is(.dark *).btn.btn-primary:visited,
a:is(.dark *).btn.btn-primary:link,
a:is(.dark *)[class*="btn-primary"],
a:is(.dark *)[class*="btn-primary"]:not(:hover),
a:is(.dark *)[class*="btn-primary"]:link,
a:is(.dark *)[class*="btn-primary"]:visited,
a.btn.btn-primary:is(.dark *),
a.btn.btn-primary:is(.dark *):hover,
a.btn.btn-primary:is(.dark *):focus,
a.btn.btn-primary:is(.dark *):active,
a.btn.btn-primary:is(.dark *):visited,
a.btn.btn-primary:is(.dark *):link,
a[class*="btn-primary"]:is(.dark *),
a[class*="btn-primary"]:is(.dark *):not(:hover),
a[class*="btn-primary"]:is(.dark *):link,
a[class*="btn-primary"]:is(.dark *):visited {
  color: rgb(255, 255, 255) !important;
  --tw-text-opacity: 1 !important;
  -webkit-text-fill-color: rgb(255, 255, 255) !important;
}

/* Force white text and darker hover for .btn-primary anchors - override ALL Tailwind utilities */
/* Explicit non-hover state to override a:is(.dark *) in normal state */
a.btn.btn-primary:not(:hover),
a[class*="btn-primary"]:not(:hover),
a.btn.btn-primary:link:not(:hover),
a[class*="btn-primary"]:link:not(:hover) {
  color: rgb(255, 255, 255) !important;
  --tw-text-opacity: 1 !important;
  -webkit-text-fill-color: rgb(255, 255, 255) !important;
}

a.btn.btn-primary,
a.btn.btn-primary:hover,
a.btn.btn-primary:focus,
a.btn.btn-primary:active,
a.btn.btn-primary:visited,
a.btn.btn-primary:link,
a[class*="btn-primary"],
a[class*="btn-primary"]:link,
a[class*="btn-primary"]:visited {
  color: rgb(255, 255, 255) !important;
  --tw-text-opacity: 1 !important;
  -webkit-text-fill-color: rgb(255, 255, 255) !important;
}

a[class*="btn-primary"]:hover,
a[class*="btn-primary"]:is(.dark *):hover {
  background-color: rgb(29, 78, 216) !important; /* primary-700 - darker on hover */
  color: rgb(255, 255, 255) !important;
  --tw-text-opacity: 1 !important;
  -webkit-text-fill-color: rgb(255, 255, 255) !important;
}

@import "flatpickr/dist/flatpickr.css";
@import "tippy.js/dist/tippy.css";
@import "tom-select/dist/css/tom-select.css";

/* FÃ¼ge hinzu */
.chart-container canvas {
  @apply dark:bg-gray-700 rounded p-2;
  max-height: 300px;
  background-color: white;
}

.dark .chart-container canvas {
  background-color: #374151;
}

/* Optimistic update animations for scoreboard */
@keyframes scoreUpdate {
  0% {
    transform: scale(1);
    background-color: transparent;
  }
  50% {
    transform: scale(1.02);
    background-color: rgba(34, 197, 94, 0.1);
  }
  100% {
    transform: scale(1);
    background-color: transparent;
  }
}

@keyframes playerChange {
  0% {
    border-color: currentColor;
  }
  50% {
    border-color: #fbbf24;
    border-width: 8px;
  }
  100% {
    border-color: currentColor;
  }
}

.score-updated {
  animation: scoreUpdate 0.15s ease-in-out;
}

.player-active {
  border-color: #10b981;
  border-width: 8px;
}

.player-inactive {
  border-color: #6b7280;
  border-width: 4px;
}

.player-change-animation {
  animation: playerChange 0.3s ease-in-out;
}

/* Optimistic update indicators */
.pending-update {
  position: relative;
}

.pending-update::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 8px;
  height: 8px;
  background-color: #fbbf24;
  border-radius: 50%;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Immediate feedback for button presses */
.scoreboard-button:active {
  transform: scale(0.95);
  transition: transform 0.1s ease-in-out;
}

/* Loading states for background operations */
.background-processing {
  opacity: 0.7;
  pointer-events: none;
}

.background-processing::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid #f3f4f6;
  border-top: 2px solid #10b981;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* FINAL OVERRIDE - Must be at the very end to override everything including a:is(.dark *) */
/* This rule has higher specificity and comes last to ensure it wins */
a:is(.dark *).btn.btn-primary,
a:is(.dark *)[class*="btn-primary"],
a.btn.btn-primary:is(.dark *),
a[class*="btn-primary"]:is(.dark *) {
  --tw-text-opacity: 1 !important;
  color: rgb(255, 255, 255) !important;
  -webkit-text-fill-color: rgb(255, 255, 255) !important;
}
